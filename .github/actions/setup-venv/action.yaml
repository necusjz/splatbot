name: Python virtualenv
description: Set up a Python virtual environment with caching

inputs:
  python-version:
    description: The Python version to use
    required: true
  cache-prefix:
    description: Update this to invalidate the cache
    required: true
    default: v0

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - shell: bash
      run: |
        pip install --upgrade pipx
        pipx ensurepath
        pipx install uv

    - shell: bash
      run: |
        # Get exact Python version for cache key
        echo "PYTHON_VERSION=$(python --version)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      id: virtualenv-cache
      with:
        path: .venv
        key: ${{ inputs.cache-prefix }}-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}

    - shell: bash
      run: |
        uv venv .venv
        source .venv/bin/activate
        uv pip compile --extra dev
        uv pip sync

    - shell: bash
      run: |
        source .venv/bin/activate
        echo "Successfully installed $(python --version) virtual environment to $(which python)"
        echo "Packages:"
        uv pip freeze
